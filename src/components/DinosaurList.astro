---
// src/components/DinosaurList.astro
import { getDinosaurs } from '../sanity/lib/queries';
import DinosaurCard from './DinosaurCard.astro';

const { groups, periods, diets, habitats } = Astro.props;

const allDinosaurs = await getDinosaurs();
---

<div id='dinosaur-list'>
  <div class='filters'>
    <select id='group-filter'>
      <option value=''>All Groups</option>
      {groups.map((group) => <option value={group.name}>{group.name}</option>)}
    </select>
    <select id='period-filter'>
      <option value=''>All Periods</option>
      {
        periods.map((period) => (
          <option value={period.name}>{period.name}</option>
        ))
      }
    </select>
    <select id='diet-filter'>
      <option value=''>All Diets</option>
      {diets.map((diet) => <option value={diet.name}>{diet.name}</option>)}
    </select>
    <select id='habitat-filter'>
      <option value=''>All Habitats</option>
      {
        habitats.map((habitat) => (
          <option value={habitat.name}>{habitat.name}</option>
        ))
      }
    </select>
    <button id='reset-filters'>Reset Filters</button>
  </div>
  <div class='dinosaur-grid'>
    {
      allDinosaurs.map((dino) => (
        <div
          class='dino-card-wrapper'
          data-group={dino.group}
          data-period={dino.period}
          data-diet={dino.diet}
          data-habitat={dino.habitat}
        >
          <DinosaurCard dino={dino} />
        </div>
      ))
    }
  </div>
</div>

<script>
  const filterSelects = document.querySelectorAll('.filters select');
  const dinoCards = document.querySelectorAll('.dino-card-wrapper');
  const resetButton = document.getElementById('reset-filters');

  filterSelects.forEach((select) => {
    select.addEventListener('change', updateVisibility);
  });

  resetButton.addEventListener('click', resetFilters);

  function updateVisibility() {
    const filters = {
      group: document.getElementById('group-filter').value,
      period: document.getElementById('period-filter').value,
      diet: document.getElementById('diet-filter').value,
      habitat: document.getElementById('habitat-filter').value,
    };

    console.log('Applied filters:', filters);

    dinoCards.forEach((card) => {
      const cardData = {
        group: card.dataset.group,
        period: card.dataset.period,
        diet: card.dataset.diet,
        habitat: card.dataset.habitat,
      };

      console.log('Card data:', cardData);

      const isVisible =
        (filters.group === '' || cardData.group === filters.group) &&
        (filters.period === '' || cardData.period === filters.period) &&
        (filters.diet === '' || cardData.diet === filters.diet) &&
        (filters.habitat === '' || cardData.habitat === filters.habitat);

      console.log('Is visible:', isVisible);

      card.style.display = isVisible ? 'block' : 'none';
      //card.classList.toggle('hidden', !isVisible);
    });
  }

  function resetFilters() {
    filterSelects.forEach((select) => {
      select.value = '';
    });
    dinoCards.forEach((card) => {
      card.style.display = 'block';
    });
  }
</script>

<style>
  /* .filters {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .filters select {
    padding: 0.5rem;
    border-radius: 5px;
    border: 1px solid #ccc;
    font-size: 1rem;
  } */
  .filters {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    margin-top: 20px;
  }
  .filters select,
  .filters button {
    margin: 10px;
    padding: 10px;
    font-size: 1em;
    border-radius: 25px;
    border: 2px solid #4caf50;
    background-color: #fff;
    transition: all 0.3s ease;
  }
  .filters select:hover,
  .filters button:hover {
    transform: scale(1.05);
  }
  .filters button {
    background-color: #4caf50;
    color: white;
    cursor: pointer;
  }
  .filters button:hover {
    background-color: #45a049;
  }

  .dinosaur-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .dino-card-wrapper {
    transition:
      opacity 0.3s ease,
      transfor 0.3s ease;
  }

  .dino-card-wrapper.hidden {
    opacity: 0;
    transform: scale(0.9);
  }
</style>
